services:
  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: your_database_name
      POSTGRES_USER: your_database_user
      POSTGRES_PASSWORD: your_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - django_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine  # Utilisation d'une image légère de Redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - django_network

  web:
    build:
      context: ./website
      dockerfile: Dockerfile
    command: daphne -b 0.0.0.0 -p 8000 transendence.asgi:application
    volumes:
      - ./website/srcs:/app/srcs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:  # Dépendance à Redis ajoutée
        condition: service_started
    environment:
      - DB_NAME=your_database_name
      - DB_USER=your_database_user
      - DB_PASSWORD=your_password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis  # Ajout de l'environnement pour Redis
    networks:
      - django_network

  bot:
    build:
      context: ./AI
      dockerfile: Dockerfile
    networks:
      - django_network
    ports:
      - "8081:8081"

  pong:
    build:
      context: ./pong  # Le contexte de build est maintenant ./srcs
      dockerfile: ./Dockerfile
    volumes:
      - ./pong:/app
    ports:
      - "8080:8080"
    networks:
      - django_network

networks:
  django_network:

volumes:
  postgres_data:
